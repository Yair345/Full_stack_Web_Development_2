.game-container {
    width: 100%;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    background-color: #f0f0f0;
    padding: 1rem;
}

.game-header {
    display: flex;
    justify-content: space-between;
    padding: 1rem;
    background-color: #2c3e50;
    color: white;
    border-radius: 8px;
    margin-bottom: 1rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.game-board {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    gap: 1rem;
    padding: 1rem;
    background-color: white;
    border-radius: 8px;
    margin: auto;
    max-width: 800px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    perspective: 1000px;
}

.card {
    aspect-ratio: 3/4;
    background-color: transparent;
    border-radius: 8px;
    cursor: pointer;
    transition: transform 0.6s;
    transform-style: preserve-3d;
    position: relative;
}

.card:hover:not(.flipped):not(.matched) {
    transform: scale(1.05);
}

.card.flipped {
    transform: rotateY(180deg);
}

.card-front,
.card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.card-front {
    background: linear-gradient(135deg, #2c3e50, #3498db);
    color: white;
}

.card-front::after {
    content: '?';
    font-size: 2.5rem;
    font-weight: bold;
    opacity: 0.7;
}

.card-back {
    background-color: white;
    transform: rotateY(180deg);
    border: 2px solid #2c3e50;
    font-family: 'Arial', sans-serif;
}

.card.matched {
    animation: matchedAnimation 0.5s ease forwards;
    cursor: default;
}

@keyframes matchedAnimation {
    0% {
        transform: rotateY(180deg) scale(1);
    }
    50% {
        transform: rotateY(180deg) scale(1.1);
    }
    100% {
        transform: rotateY(180deg) scale(1);
    }
}

.card.matched .card-back {
    background-color: #2ecc71;
    border-color: #27ae60;
    color: white;
}

.game-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 100;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.game-overlay:not(.hidden) {
    opacity: 1;
}

.overlay-content {
    background-color: white;
    padding: 2rem 3rem;
    border-radius: 8px;
    text-align: center;
    transform: scale(0.9);
    transition: transform 0.3s ease;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
}

.game-overlay:not(.hidden) .overlay-content {
    transform: scale(1);
}

.moves, .pairs, .time {
    font-size: 1.2rem;
    font-weight: bold;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
}

.menu-button, button {
    display: inline-block;
    margin: 0.5rem;
    padding: 0.75rem 1.5rem;
    background-color: #2c3e50;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    border: none;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 1rem;
    font-weight: bold;
}

.menu-button:hover, button:hover {
    background-color: #34495e;
    transform: translateY(-2px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

.menu-button:active, button:active {
    transform: translateY(0);
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
}

@media (max-width: 768px) {
    .game-board {
        grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
        gap: 0.5rem;
        padding: 0.5rem;
    }

    .game-header {
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem;
    }

    .card-front::after {
        font-size: 2rem;
    }
}

@media (min-width: 769px) {
    .game-board {
        grid-template-columns: repeat(4, 1fr);
    }
}

.shake {
    animation: shake 0.5s ease-in-out;
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    20% { transform: translateX(-5px) rotateY(180deg); }
    40% { transform: translateX(5px) rotateY(180deg); }
    60% { transform: translateX(-3px) rotateY(180deg); }
    80% { transform: translateX(3px) rotateY(180deg); }
}

.celebration {
    position: absolute;
    pointer-events: none;
    animation: celebrate 1s ease-out forwards;
    opacity: 0;
}

@keyframes celebrate {
    0% {
        transform: translateY(0) scale(0);
        opacity: 1;
    }
    100% {
        transform: translateY(-100px) scale(1);
        opacity: 0;
    }
}
